---
title: "01_load"
format: html
editor: visual
---

# 01_load

## Prepping

Clearing the environment, loading the libraries and saving the path to the data folder.

```{r}
#| message: false

rm(list = ls())

library("tidyverse")
library("readxl")

data_path <- "~/projects/Group25_Project/data"

```

## Barracoda

### Setting the necessary filenames and folder paths

```{r}

raw_data_path <- file.path(data_path, "_raw")
raw_data_path_barra <- file.path(raw_data_path, "barracoda")

file_paths_barra <- list.files(path = raw_data_path_barra,
                    pattern = ".xlsx",
                    full.names = TRUE)

file_names_barra <- list.files(path = raw_data_path_barra,
                         pattern = "\\.xlsx",
                         full.names = FALSE)

outfile_name_barra <- "01_dat_load_barracoda.RDS"
outfile_path_barra <- file.path(data_path, outfile_name_barra)

```

### Loading data

Combining all excel files into one tsv file.

Some data included information in the name that could not be found in the file - Eg: not KIR blocked, KIR blocked (\_KIR\_) and KIR double positive (\_KIR_DP)\
Therefore this loading step does not exclusively clean, it also augments the data to some extent.

```{r}
#| message: false
#| warning: false

colnames <- c("barcode", "sample", "count.1", "input.1", "input.2", "input.3", "log_fold_change", "p", "-log10(p)", "masked_p (p = 1 if logFC < 0)", "-log10(masked_p)", "count.normalised (edgeR)", "input.normalised (edgeR)", "Number", "HLA", "Protein", "Peptide")

data_b <- map(file_paths_barra,
             ~read_excel(.x)) |>
  map(~select(.x,
              all_of(colnames))) |>
  map2(file_names_barra,
       ~mutate(.x,
               filename = .y)) |>
  map(~filter(.x,
              row_number() <= n()-1)) |>  # remove last row as it contained a formula
  map(~mutate(.x,                         # fixing a type issue
              "-log10(masked_p)" = as.numeric(.x[["-log10(masked_p)"]]))) |>
  bind_rows()                             # merging all tibbles into one

```

### Export data

```{r}

saveRDS(data_b, file = outfile_path_barra)

```

## Flowjo

### Setting the necessary filenames and folder paths

```{r}

raw_data_path <- file.path(data_path, "_raw")

raw_data_path_flow <- file.path(raw_data_path, "flowjo")

file_paths_flow <- list.files(path = raw_data_path_flow,
                    pattern = ".xls",
                    full.names = TRUE)

outfile_name_flow <- "01_dat_load_flowjo.RDS"
outfile_path_flow <- file.path(data_path, outfile_name_flow)

```

### Loading data

```{r}
#| message: false
#| warning: false

#### DIVIDE BY 100 when removing %

data_f <- map(file_paths_flow, 
             ~read_excel(.x, col_types = 'text')) |>          # reading all files into tibbles
        map(~rename(.x,
                    experiment = "...1")) |>       # giving all columns names
        map(~filter(.x,
                    row_number() <= n()-2)) |>
        map(~mutate(.x, 
                    across(-experiment,
                           ~as.numeric(str_replace(str_remove(.x, " %"), ",", "."))/100))) |> 
        bind_rows()

```

### Exporting data

```{r}

saveRDS(data_f, file = outfile_path_flow)

```
